2 shift/reduce conflicts

error:  state 36: shift/reduce conflict (shift TYPE, reduce by rule 16)
error:  state 37: shift/reduce conflict (shift FUNCTION, reduce by rule 18)

state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 164
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 1:

	exp : control .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : assign .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	exp : boolexp .  (reduce by rule 9)



	.	reduce by rule 9


state 4:

	exp : compexp .  (reduce by rule 8)



	.	reduce by rule 8


state 5:

	exp : mathexp .  (reduce by rule 7)



	.	reduce by rule 7


state 6:

	exp : fncallexp .  (reduce by rule 6)



	.	reduce by rule 6


state 7:

	exp : sequence .  (reduce by rule 5)



	.	reduce by rule 5


state 8:

	exp : array .  (reduce by rule 12)



	.	reduce by rule 12


state 9:

	exp : record .  (reduce by rule 13)



	.	reduce by rule 13


state 10:

	exp : lvalue .  (reduce by rule 1)
	assign : lvalue . ASSIGN exp 

	ASSIGN	shift 23


	.	reduce by rule 1


state 11:

	program : exp .  (reduce by rule 0)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 13:

	control : BREAK .  (reduce by rule 71)



	.	reduce by rule 71


state 14:

	control : LET . decs IN seqexp END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 40
	dec	goto 39
	vardec	goto 38
	fundec	goto 37
	tydec	goto 36

	.	reduce by rule 15


state 15:

	control : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 44


	.	error


state 16:

	control : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 45
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 17:

	control : IF . exp THEN exp ELSE exp 
	control : IF . exp THEN exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 46
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 18:

	mathexp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 47
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 19:

	sequence : LPAREN . seqexp RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1
	seqexp	goto 48

	.	error


state 20:

	exp : STRING .  (reduce by rule 4)



	.	reduce by rule 4


state 21:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 22:

	lvalue : ID . lvaluetail 
	record : ID . LBRACE fields RBRACE 
	array : ID . LBRACK exp RBRACK OF exp 
	fncallexp : ID . LPAREN args RPAREN 

	LPAREN	shift 54
	LBRACK	shift 53
	LBRACE	shift 52
	DOT	shift 51

	lvaluetail	goto 50

	.	reduce by rule 35


state 23:

	assign : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 55
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 24:

	boolexp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 56
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 25:

	boolexp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 57
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 26:

	compexp : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 58
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 27:

	compexp : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 59
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 28:

	compexp : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 60
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 29:

	compexp : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 61
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 30:

	compexp : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 31:

	compexp : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 32:

	mathexp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 33:

	mathexp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 34:

	mathexp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 35:

	mathexp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error

error:  state 36: shift/reduce conflict (shift TYPE, reduce by rule 16)

state 36:

	dec : tydec .  (reduce by rule 16)
	tydec : tydec . TYPE ID EQ ty 

	TYPE	shift 68


	.	reduce by rule 16

error:  state 37: shift/reduce conflict (shift FUNCTION, reduce by rule 18)

state 37:

	dec : fundec .  (reduce by rule 18)
	fundec : fundec . FUNCTION ID LPAREN tyfields RPAREN funcreturntype EQ exp 

	FUNCTION	shift 69


	.	reduce by rule 18


state 38:

	dec : vardec .  (reduce by rule 17)



	.	reduce by rule 17


state 39:

	decs : dec . decs 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 70
	dec	goto 39
	vardec	goto 38
	fundec	goto 37
	tydec	goto 36

	.	reduce by rule 15


state 40:

	control : LET decs . IN seqexp END 

	IN	shift 71


	.	error


state 41:

	tydec : TYPE . ID EQ ty 

	ID	shift 72


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 73


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN funcreturntype EQ exp 

	ID	shift 74


	.	error


state 44:

	control : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 75


	.	error


state 45:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : WHILE exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 76


	.	error


state 46:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp . THEN exp ELSE exp 
	control : IF exp . THEN exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 77


	.	error


state 47:

	mathexp : MINUS exp .  (reduce by rule 53)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 53


state 48:

	sequence : LPAREN seqexp . RPAREN 

	RPAREN	shift 78


	.	error


state 49:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	seqexp : exp . seqexptail 

	SEMICOLON	shift 80
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	seqexptail	goto 79

	.	reduce by rule 49


state 50:

	lvalue : ID lvaluetail .  (reduce by rule 34)



	.	reduce by rule 34


state 51:

	lvaluetail : DOT . ID lvaluetail 

	ID	shift 81


	.	error


state 52:

	record : ID LBRACE . fields RBRACE 

	ID	shift 83

	fields	goto 82

	.	reduce by rule 38


state 53:

	lvaluetail : LBRACK . exp RBRACK lvaluetail 
	array : ID LBRACK . exp RBRACK OF exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 84
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 54:

	fncallexp : ID LPAREN . args RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 86
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1
	args	goto 85

	.	reduce by rule 44


state 55:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	assign : lvalue ASSIGN exp .  (reduce by rule 66)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 66


state 56:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	boolexp : exp OR exp .  (reduce by rule 65)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25


	.	reduce by rule 65


state 57:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp AND exp .  (reduce by rule 64)
	boolexp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 64


state 58:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	compexp : exp GE exp .  (reduce by rule 63)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 59:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp GT exp .  (reduce by rule 62)
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 60:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp LE exp .  (reduce by rule 61)
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 61:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp LT exp .  (reduce by rule 60)
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 62:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp NEQ exp .  (reduce by rule 59)
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 63:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp EQ exp .  (reduce by rule 58)
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 64:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	mathexp : exp DIVIDE exp .  (reduce by rule 57)
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 57


state 65:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp TIMES exp .  (reduce by rule 56)
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 56


state 66:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp MINUS exp .  (reduce by rule 55)
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 55


state 67:

	mathexp : exp . PLUS exp 
	mathexp : exp PLUS exp .  (reduce by rule 54)
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 54


state 68:

	tydec : tydec TYPE . ID EQ ty 

	ID	shift 87


	.	error


state 69:

	fundec : fundec FUNCTION . ID LPAREN tyfields RPAREN funcreturntype EQ exp 

	ID	shift 88


	.	error


state 70:

	decs : dec decs .  (reduce by rule 14)



	.	reduce by rule 14


state 71:

	control : LET decs IN . seqexp END 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1
	seqexp	goto 89

	.	error


state 72:

	tydec : TYPE ID . EQ ty 

	EQ	shift 90


	.	error


state 73:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 92
	ASSIGN	shift 91


	.	error


state 74:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN funcreturntype EQ exp 

	LPAREN	shift 93


	.	error


state 75:

	control : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 94
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 76:

	control : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 95
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 77:

	control : IF exp THEN . exp ELSE exp 
	control : IF exp THEN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 96
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 78:

	sequence : LPAREN seqexp RPAREN .  (reduce by rule 51)



	.	reduce by rule 51


state 79:

	seqexp : exp seqexptail .  (reduce by rule 48)



	.	reduce by rule 48


state 80:

	seqexptail : SEMICOLON . exp seqexptail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 97
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 81:

	lvaluetail : DOT ID . lvaluetail 

	LBRACK	shift 99
	DOT	shift 51

	lvaluetail	goto 98

	.	reduce by rule 35


state 82:

	record : ID LBRACE fields . RBRACE 

	RBRACE	shift 100


	.	error


state 83:

	fields : ID . EQ exp fieldtail 

	EQ	shift 101


	.	error


state 84:

	lvaluetail : LBRACK exp . RBRACK lvaluetail 
	array : ID LBRACK exp . RBRACK OF exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	RBRACK	shift 102
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 85:

	fncallexp : ID LPAREN args . RPAREN 

	RPAREN	shift 103


	.	error


state 86:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	args : exp . argtail 

	COMMA	shift 105
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	argtail	goto 104

	.	reduce by rule 46


state 87:

	tydec : tydec TYPE ID . EQ ty 

	EQ	shift 106


	.	error


state 88:

	fundec : fundec FUNCTION ID . LPAREN tyfields RPAREN funcreturntype EQ exp 

	LPAREN	shift 107


	.	error


state 89:

	control : LET decs IN seqexp . END 

	END	shift 108


	.	error


state 90:

	tydec : TYPE ID EQ . ty 

	ID	shift 112
	LBRACE	shift 111
	ARRAY	shift 110

	ty	goto 109

	.	error


state 91:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 113
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 92:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 114


	.	error


state 93:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN funcreturntype EQ exp 

	ID	shift 116

	tyfields	goto 115

	.	reduce by rule 22


state 94:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 117


	.	error


state 95:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : WHILE exp DO exp .  (reduce by rule 69)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 69


state 96:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp THEN exp . ELSE exp 
	control : IF exp THEN exp .  (reduce by rule 68)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	ELSE	shift 118


	.	reduce by rule 68


state 97:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	seqexptail : SEMICOLON exp . seqexptail 

	SEMICOLON	shift 80
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	seqexptail	goto 119

	.	reduce by rule 49


state 98:

	lvaluetail : DOT ID lvaluetail .  (reduce by rule 36)



	.	reduce by rule 36


state 99:

	lvaluetail : LBRACK . exp RBRACK lvaluetail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 120
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 100:

	record : ID LBRACE fields RBRACE .  (reduce by rule 42)



	.	reduce by rule 42


state 101:

	fields : ID EQ . exp fieldtail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 121
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 102:

	lvaluetail : LBRACK exp RBRACK . lvaluetail 
	array : ID LBRACK exp RBRACK . OF exp 

	LBRACK	shift 99
	DOT	shift 51
	OF	shift 123

	lvaluetail	goto 122

	.	reduce by rule 35


state 103:

	fncallexp : ID LPAREN args RPAREN .  (reduce by rule 52)



	.	reduce by rule 52


state 104:

	args : exp argtail .  (reduce by rule 45)



	.	reduce by rule 45


state 105:

	argtail : COMMA . exp argtail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 124
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 106:

	tydec : tydec TYPE ID EQ . ty 

	ID	shift 112
	LBRACE	shift 111
	ARRAY	shift 110

	ty	goto 125

	.	error


state 107:

	fundec : fundec FUNCTION ID LPAREN . tyfields RPAREN funcreturntype EQ exp 

	ID	shift 116

	tyfields	goto 126

	.	reduce by rule 22


state 108:

	control : LET decs IN seqexp END .  (reduce by rule 72)



	.	reduce by rule 72


state 109:

	tydec : TYPE ID EQ ty .  (reduce by rule 26)



	.	reduce by rule 26


state 110:

	ty : ARRAY . OF ID 

	OF	shift 127


	.	error


state 111:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 116

	tyfields	goto 128

	.	reduce by rule 22


state 112:

	ty : ID .  (reduce by rule 19)



	.	reduce by rule 19


state 113:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 28)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 28


state 114:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 129


	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN funcreturntype EQ exp 

	RPAREN	shift 130


	.	error


state 116:

	tyfields : ID . COLON ID tyfieldstail 

	COLON	shift 131


	.	error


state 117:

	control : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 132
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 118:

	control : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 133
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 119:

	seqexptail : SEMICOLON exp seqexptail .  (reduce by rule 50)



	.	reduce by rule 50


state 120:

	lvaluetail : LBRACK exp . RBRACK lvaluetail 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	RBRACK	shift 134
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 121:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fields : ID EQ exp . fieldtail 

	COMMA	shift 136
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	fieldtail	goto 135

	.	reduce by rule 40


state 122:

	lvaluetail : LBRACK exp RBRACK lvaluetail .  (reduce by rule 37)



	.	reduce by rule 37


state 123:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 137
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 124:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	argtail : COMMA exp . argtail 

	COMMA	shift 105
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	argtail	goto 138

	.	reduce by rule 46


state 125:

	tydec : tydec TYPE ID EQ ty .  (reduce by rule 27)



	.	reduce by rule 27


state 126:

	fundec : fundec FUNCTION ID LPAREN tyfields . RPAREN funcreturntype EQ exp 

	RPAREN	shift 139


	.	error


state 127:

	ty : ARRAY OF . ID 

	ID	shift 140


	.	error


state 128:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 141


	.	error


state 129:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 142
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . funcreturntype EQ exp 

	COLON	shift 144

	funcreturntype	goto 143

	.	reduce by rule 32


state 131:

	tyfields : ID COLON . ID tyfieldstail 

	ID	shift 145


	.	error


state 132:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 146


	.	error


state 133:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp THEN exp ELSE exp .  (reduce by rule 67)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 67


state 134:

	lvaluetail : LBRACK exp RBRACK . lvaluetail 

	LBRACK	shift 99
	DOT	shift 51

	lvaluetail	goto 122

	.	reduce by rule 35


state 135:

	fields : ID EQ exp fieldtail .  (reduce by rule 39)



	.	reduce by rule 39


state 136:

	fieldtail : COMMA . ID EQ exp fieldtail 

	ID	shift 147


	.	error


state 137:

	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 43)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 43


state 138:

	argtail : COMMA exp argtail .  (reduce by rule 47)



	.	reduce by rule 47


state 139:

	fundec : fundec FUNCTION ID LPAREN tyfields RPAREN . funcreturntype EQ exp 

	COLON	shift 144

	funcreturntype	goto 148

	.	reduce by rule 32


state 140:

	ty : ARRAY OF ID .  (reduce by rule 21)



	.	reduce by rule 21


state 141:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 142:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 29)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 29


state 143:

	fundec : FUNCTION ID LPAREN tyfields RPAREN funcreturntype . EQ exp 

	EQ	shift 149


	.	error


state 144:

	funcreturntype : COLON . ID 

	ID	shift 150


	.	error


state 145:

	tyfields : ID COLON ID . tyfieldstail 

	COMMA	shift 152

	tyfieldstail	goto 151

	.	reduce by rule 24


state 146:

	control : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 153
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 147:

	fieldtail : COMMA ID . EQ exp fieldtail 

	EQ	shift 154


	.	error


state 148:

	fundec : fundec FUNCTION ID LPAREN tyfields RPAREN funcreturntype . EQ exp 

	EQ	shift 155


	.	error


state 149:

	fundec : FUNCTION ID LPAREN tyfields RPAREN funcreturntype EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 156
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 150:

	funcreturntype : COLON ID .  (reduce by rule 33)



	.	reduce by rule 33


state 151:

	tyfields : ID COLON ID tyfieldstail .  (reduce by rule 23)



	.	reduce by rule 23


state 152:

	tyfieldstail : COMMA . ID COLON ID tyfieldstail 

	ID	shift 157


	.	error


state 153:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 70)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 70


state 154:

	fieldtail : COMMA ID EQ . exp fieldtail 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 158
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 155:

	fundec : fundec FUNCTION ID LPAREN tyfields RPAREN funcreturntype EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 159
	lvalue	goto 10
	record	goto 9
	array	goto 8
	sequence	goto 7
	fncallexp	goto 6
	mathexp	goto 5
	compexp	goto 4
	boolexp	goto 3
	assign	goto 2
	control	goto 1

	.	error


state 156:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN funcreturntype EQ exp .  (reduce by rule 30)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 30


state 157:

	tyfieldstail : COMMA ID . COLON ID tyfieldstail 

	COLON	shift 160


	.	error


state 158:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fieldtail : COMMA ID EQ exp . fieldtail 

	COMMA	shift 136
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	fieldtail	goto 161

	.	reduce by rule 40


state 159:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fundec : fundec FUNCTION ID LPAREN tyfields RPAREN funcreturntype EQ exp .  (reduce by rule 31)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 31


state 160:

	tyfieldstail : COMMA ID COLON . ID tyfieldstail 

	ID	shift 162


	.	error


state 161:

	fieldtail : COMMA ID EQ exp fieldtail .  (reduce by rule 41)



	.	reduce by rule 41


state 162:

	tyfieldstail : COMMA ID COLON ID . tyfieldstail 

	COMMA	shift 152

	tyfieldstail	goto 163

	.	reduce by rule 24


state 163:

	tyfieldstail : COMMA ID COLON ID tyfieldstail .  (reduce by rule 25)



	.	reduce by rule 25


state 164:


	EOF	accept


	.	error

479 of 1080 action table entries left after compaction
441 goto table entries
