
state 0:

	program : . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 12
	program	goto 152
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 1:

	record : ty . LBRACE fields RBRACE 

	LBRACE	shift 26


	.	error


state 2:

	exp : control .  (reduce by rule 11)



	.	reduce by rule 11


state 3:

	exp : assign .  (reduce by rule 10)



	.	reduce by rule 10


state 4:

	exp : boolexp .  (reduce by rule 9)



	.	reduce by rule 9


state 5:

	exp : compexp .  (reduce by rule 8)



	.	reduce by rule 8


state 6:

	exp : mathexp .  (reduce by rule 7)



	.	reduce by rule 7


state 7:

	exp : fncallexp .  (reduce by rule 6)



	.	reduce by rule 6


state 8:

	exp : sequence .  (reduce by rule 5)



	.	reduce by rule 5


state 9:

	exp : array .  (reduce by rule 12)



	.	reduce by rule 12


state 10:

	exp : record .  (reduce by rule 13)



	.	reduce by rule 13


state 11:

	exp : lvalue .  (reduce by rule 1)
	assign : lvalue . ASSIGN exp 

	ASSIGN	shift 27


	.	reduce by rule 1


state 12:

	program : exp .  (reduce by rule 0)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 0


state 13:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 14:

	control : BREAK .  (reduce by rule 69)



	.	reduce by rule 69


state 15:

	control : LET . decs IN seqexp END 

	FUNCTION	shift 47
	VAR	shift 46
	HELLO	shift 45

	decs	goto 44
	dec	goto 43
	vardec	goto 42
	fundec	goto 41
	tydec	goto 40

	.	reduce by rule 15


state 16:

	control : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 48


	.	error


state 17:

	control : WHILE . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 49
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 18:

	control : IF . exp THEN exp ELSE exp 
	control : IF . exp THEN exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 50
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 19:

	ty : ARRAY . OF ID 

	OF	shift 51


	.	error


state 20:

	mathexp : MINUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 52
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 21:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 54

	tyfields	goto 53

	.	reduce by rule 22


state 22:

	sequence : LPAREN . seqexp RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 56
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1
	seqexp	goto 55

	.	error


state 23:

	exp : STRING .  (reduce by rule 4)



	.	reduce by rule 4


state 24:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 25:

	lvalue : ID . lvaluetail 
	array : ID . LBRACK exp RBRACK OF exp 
	fncallexp : ID . LPAREN args RPAREN 
	ty : ID .  (reduce by rule 19)

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	LPAREN	shift 60
	RPAREN	reduce by rule 33
	LBRACK	shift 59
	RBRACK	reduce by rule 33
	LBRACE	reduce by rule 19
	RBRACE	reduce by rule 33
	DOT	shift 58
	PLUS	reduce by rule 33
	MINUS	reduce by rule 33
	TIMES	reduce by rule 33
	DIVIDE	reduce by rule 33
	EQ	reduce by rule 33
	NEQ	reduce by rule 33
	LT	reduce by rule 33
	LE	reduce by rule 33
	GT	reduce by rule 33
	GE	reduce by rule 33
	AND	reduce by rule 33
	OR	reduce by rule 33
	ASSIGN	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	HELLO	reduce by rule 33

	lvaluetail	goto 57

	.	error


state 26:

	record : ty LBRACE . fields RBRACE 

	ID	shift 62

	fields	goto 61

	.	reduce by rule 36


state 27:

	assign : lvalue ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 63
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 28:

	boolexp : exp OR . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 64
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 29:

	boolexp : exp AND . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 65
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 30:

	compexp : exp GE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 66
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 31:

	compexp : exp GT . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 67
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 32:

	compexp : exp LE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 68
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 33:

	compexp : exp LT . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 69
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 34:

	compexp : exp NEQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 70
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 35:

	compexp : exp EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 71
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 36:

	mathexp : exp DIVIDE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 72
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 37:

	mathexp : exp TIMES . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 73
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 38:

	mathexp : exp MINUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 74
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 39:

	mathexp : exp PLUS . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 75
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 40:

	dec : tydec .  (reduce by rule 16)



	.	reduce by rule 16


state 41:

	dec : fundec .  (reduce by rule 18)



	.	reduce by rule 18


state 42:

	dec : vardec .  (reduce by rule 17)



	.	reduce by rule 17


state 43:

	decs : dec . decs 

	FUNCTION	shift 47
	VAR	shift 46
	HELLO	shift 45

	decs	goto 76
	dec	goto 43
	vardec	goto 42
	fundec	goto 41
	tydec	goto 40

	.	reduce by rule 15


state 44:

	control : LET decs . IN seqexp END 

	IN	shift 77


	.	error


state 45:

	tydec : HELLO .  (reduce by rule 26)
	tydec : HELLO . tydec 

	IN	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26

	tydec	goto 78

	.	error


state 46:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ty ASSIGN exp 

	ID	shift 79


	.	error


state 47:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ty EQ exp 

	ID	shift 80


	.	error


state 48:

	control : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 81


	.	error


state 49:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : WHILE exp . DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 82


	.	error


state 50:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp . THEN exp ELSE exp 
	control : IF exp . THEN exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	THEN	shift 83


	.	error


state 51:

	ty : ARRAY OF . ID 

	ID	shift 84


	.	error


state 52:

	mathexp : MINUS exp .  (reduce by rule 51)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 51


state 53:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 85


	.	error


state 54:

	tyfields : ID . COLON ty tyfieldstail 

	COLON	shift 86


	.	error


state 55:

	sequence : LPAREN seqexp . RPAREN 

	RPAREN	shift 87


	.	error


state 56:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	seqexp : exp . seqexptail 

	SEMICOLON	shift 89
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	seqexptail	goto 88

	.	reduce by rule 47


state 57:

	lvalue : ID lvaluetail .  (reduce by rule 32)



	.	reduce by rule 32


state 58:

	lvaluetail : DOT . ID lvaluetail 

	ID	shift 90


	.	error


state 59:

	lvaluetail : LBRACK . exp RBRACK lvaluetail 
	array : ID LBRACK . exp RBRACK OF exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 91
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 60:

	fncallexp : ID LPAREN . args RPAREN 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 93
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1
	args	goto 92

	.	reduce by rule 42


state 61:

	record : ty LBRACE fields . RBRACE 

	RBRACE	shift 94


	.	error


state 62:

	fields : ID . EQ exp fieldtail 

	EQ	shift 95


	.	error


state 63:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	assign : lvalue ASSIGN exp .  (reduce by rule 64)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 64


state 64:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	boolexp : exp OR exp .  (reduce by rule 63)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29


	.	reduce by rule 63


state 65:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp AND exp .  (reduce by rule 62)
	boolexp : exp . OR exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30


	.	reduce by rule 62


state 66:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	compexp : exp GE exp .  (reduce by rule 61)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	HELLO	reduce by rule 61


	.	error


state 67:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp GT exp .  (reduce by rule 60)
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	HELLO	reduce by rule 60


	.	error


state 68:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp LE exp .  (reduce by rule 59)
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	HELLO	reduce by rule 59


	.	error


state 69:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp LT exp .  (reduce by rule 58)
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	HELLO	reduce by rule 58


	.	error


state 70:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp NEQ exp .  (reduce by rule 57)
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	HELLO	reduce by rule 57


	.	error


state 71:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp EQ exp .  (reduce by rule 56)
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	HELLO	reduce by rule 56


	.	error


state 72:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	mathexp : exp DIVIDE exp .  (reduce by rule 55)
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 55


state 73:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp TIMES exp .  (reduce by rule 54)
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 



	.	reduce by rule 54


state 74:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp MINUS exp .  (reduce by rule 53)
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 53


state 75:

	mathexp : exp . PLUS exp 
	mathexp : exp PLUS exp .  (reduce by rule 52)
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 52


state 76:

	decs : dec decs .  (reduce by rule 14)



	.	reduce by rule 14


state 77:

	control : LET decs IN . seqexp END 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 56
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1
	seqexp	goto 96

	.	error


state 78:

	tydec : HELLO tydec .  (reduce by rule 27)



	.	reduce by rule 27


state 79:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ty ASSIGN exp 

	COLON	shift 98
	ASSIGN	shift 97


	.	error


state 80:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ty EQ exp 

	LPAREN	shift 99


	.	error


state 81:

	control : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 100
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 82:

	control : WHILE exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 101
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 83:

	control : IF exp THEN . exp ELSE exp 
	control : IF exp THEN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 102
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 84:

	ty : ARRAY OF ID .  (reduce by rule 21)



	.	reduce by rule 21


state 85:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 86:

	tyfields : ID COLON . ty tyfieldstail 

	ID	shift 104
	LBRACE	shift 21
	ARRAY	shift 19

	ty	goto 103

	.	error


state 87:

	sequence : LPAREN seqexp RPAREN .  (reduce by rule 49)



	.	reduce by rule 49


state 88:

	seqexp : exp seqexptail .  (reduce by rule 46)



	.	reduce by rule 46


state 89:

	seqexptail : SEMICOLON . exp seqexptail 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 105
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 90:

	lvaluetail : DOT ID . lvaluetail 

	LBRACK	shift 107
	DOT	shift 58

	lvaluetail	goto 106

	.	reduce by rule 33


state 91:

	lvaluetail : LBRACK exp . RBRACK lvaluetail 
	array : ID LBRACK exp . RBRACK OF exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	RBRACK	shift 108
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 92:

	fncallexp : ID LPAREN args . RPAREN 

	RPAREN	shift 109


	.	error


state 93:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	args : exp . argtail 

	COMMA	shift 111
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	argtail	goto 110

	.	reduce by rule 44


state 94:

	record : ty LBRACE fields RBRACE .  (reduce by rule 40)



	.	reduce by rule 40


state 95:

	fields : ID EQ . exp fieldtail 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 112
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 96:

	control : LET decs IN seqexp . END 

	END	shift 113


	.	error


state 97:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 114
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 98:

	vardec : VAR ID COLON . ty ASSIGN exp 

	ID	shift 104
	LBRACE	shift 21
	ARRAY	shift 19

	ty	goto 115

	.	error


state 99:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ty EQ exp 

	ID	shift 54

	tyfields	goto 116

	.	reduce by rule 22


state 100:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	TO	shift 117


	.	error


state 101:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : WHILE exp DO exp .  (reduce by rule 67)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 67


state 102:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp THEN exp . ELSE exp 
	control : IF exp THEN exp .  (reduce by rule 66)

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	THEN	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	HELLO	reduce by rule 66


	.	error


state 103:

	tyfields : ID COLON ty . tyfieldstail 

	COMMA	shift 120

	tyfieldstail	goto 119

	.	reduce by rule 24


state 104:

	ty : ID .  (reduce by rule 19)



	.	reduce by rule 19


state 105:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	seqexptail : SEMICOLON exp . seqexptail 

	SEMICOLON	shift 89
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	seqexptail	goto 121

	.	reduce by rule 47


state 106:

	lvaluetail : DOT ID lvaluetail .  (reduce by rule 34)



	.	reduce by rule 34


state 107:

	lvaluetail : LBRACK . exp RBRACK lvaluetail 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 122
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 108:

	lvaluetail : LBRACK exp RBRACK . lvaluetail 
	array : ID LBRACK exp RBRACK . OF exp 

	LBRACK	shift 107
	DOT	shift 58
	OF	shift 124

	lvaluetail	goto 123

	.	reduce by rule 33


state 109:

	fncallexp : ID LPAREN args RPAREN .  (reduce by rule 50)



	.	reduce by rule 50


state 110:

	args : exp argtail .  (reduce by rule 43)



	.	reduce by rule 43


state 111:

	argtail : COMMA . exp argtail 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 125
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 112:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fields : ID EQ exp . fieldtail 

	COMMA	shift 127
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	fieldtail	goto 126

	.	reduce by rule 38


state 113:

	control : LET decs IN seqexp END .  (reduce by rule 70)



	.	reduce by rule 70


state 114:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 28)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 28


state 115:

	vardec : VAR ID COLON ty . ASSIGN exp 

	ASSIGN	shift 128


	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ty EQ exp 

	RPAREN	shift 129


	.	error


state 117:

	control : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 130
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 118:

	control : IF exp THEN exp ELSE . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 131
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 119:

	tyfields : ID COLON ty tyfieldstail .  (reduce by rule 23)



	.	reduce by rule 23


state 120:

	tyfieldstail : COMMA . ID COLON ty tyfieldstail 

	ID	shift 132


	.	error


state 121:

	seqexptail : SEMICOLON exp seqexptail .  (reduce by rule 48)



	.	reduce by rule 48


state 122:

	lvaluetail : LBRACK exp . RBRACK lvaluetail 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	RBRACK	shift 133
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 123:

	lvaluetail : LBRACK exp RBRACK lvaluetail .  (reduce by rule 35)



	.	reduce by rule 35


state 124:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 134
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 125:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	argtail : COMMA exp . argtail 

	COMMA	shift 111
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	argtail	goto 135

	.	reduce by rule 44


state 126:

	fields : ID EQ exp fieldtail .  (reduce by rule 37)



	.	reduce by rule 37


state 127:

	fieldtail : COMMA . ID EQ exp fieldtail 

	ID	shift 136


	.	error


state 128:

	vardec : VAR ID COLON ty ASSIGN . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 137
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ty EQ exp 

	COLON	shift 139
	EQ	shift 138


	.	error


state 130:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 140


	.	error


state 131:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : IF exp THEN exp ELSE exp .  (reduce by rule 65)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 65


state 132:

	tyfieldstail : COMMA ID . COLON ty tyfieldstail 

	COLON	shift 141


	.	error


state 133:

	lvaluetail : LBRACK exp RBRACK . lvaluetail 

	LBRACK	shift 107
	DOT	shift 58

	lvaluetail	goto 123

	.	reduce by rule 33


state 134:

	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 41)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 41


state 135:

	argtail : COMMA exp argtail .  (reduce by rule 45)



	.	reduce by rule 45


state 136:

	fieldtail : COMMA ID . EQ exp fieldtail 

	EQ	shift 142


	.	error


state 137:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	vardec : VAR ID COLON ty ASSIGN exp .  (reduce by rule 29)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 29


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 143
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ty EQ exp 

	ID	shift 104
	LBRACE	shift 21
	ARRAY	shift 19

	ty	goto 144

	.	error


state 140:

	control : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 145
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 141:

	tyfieldstail : COMMA ID COLON . ty tyfieldstail 

	ID	shift 104
	LBRACE	shift 21
	ARRAY	shift 19

	ty	goto 146

	.	error


state 142:

	fieldtail : COMMA ID EQ . exp fieldtail 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 147
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 143:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 30)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 30


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ty . EQ exp 

	EQ	shift 148


	.	error


state 145:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	control : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 68)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 68


state 146:

	tyfieldstail : COMMA ID COLON ty . tyfieldstail 

	COMMA	shift 120

	tyfieldstail	goto 149

	.	reduce by rule 24


state 147:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fieldtail : COMMA ID EQ exp . fieldtail 

	COMMA	shift 127
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28

	fieldtail	goto 150

	.	reduce by rule 38


state 148:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ty EQ . exp 

	ID	shift 25
	INT	shift 24
	STRING	shift 23
	LPAREN	shift 22
	LBRACE	shift 21
	MINUS	shift 20
	ARRAY	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	BREAK	shift 14
	NIL	shift 13

	exp	goto 151
	lvalue	goto 11
	record	goto 10
	array	goto 9
	sequence	goto 8
	fncallexp	goto 7
	mathexp	goto 6
	compexp	goto 5
	boolexp	goto 4
	assign	goto 3
	control	goto 2
	ty	goto 1

	.	error


state 149:

	tyfieldstail : COMMA ID COLON ty tyfieldstail .  (reduce by rule 25)



	.	reduce by rule 25


state 150:

	fieldtail : COMMA ID EQ exp fieldtail .  (reduce by rule 39)



	.	reduce by rule 39


state 151:

	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ty EQ exp .  (reduce by rule 31)

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 31


state 152:


	EOF	accept


	.	error

519 of 1182 action table entries left after compaction
478 goto table entries
